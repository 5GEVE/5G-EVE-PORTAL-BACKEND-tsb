swagger: "2.0"
info:
  description: "Ticketing system module for 5G-EVE portal"
  version: "0.0.1"
  title: "5G-EVE TSM module"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "gigarcia@it.uc3m.es"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "www.5g-eve.eu"
basePath: "/portal/tsb"
schemes:
- "https"
- "http"
paths:
  /tickets:
    post:
      tags:
      - "tickets"
      summary: "Add a new ticket"
      description: ""
      operationId: "addTicket"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New ticket to be created"
        required: true
        schema:
          $ref: "#/definitions/newTicket"
      responses:
        400:
          description: "Bad request due to missing parameters"
        401:
          description: "Unauthorized"
        200:
          description: "Ticket correctly created"
        
      security:
        - api_key: []
    get:
      tags:
      - "tickets"
      summary: "Finds tickets assotiated to a specific user"
      description: ""
      operationId: "getTickets"
      produces:
      - "application/json"
      responses:
        401:
          description: "Unauthorized"
        200:
          description: ""
      security:
        - api_key: []

  /products:
    get:
      tags:
      - "tickets"
      summary: "Finds available products that are susceptible for ticket association"
      description: ""
      operationId: "getProducts"
      produces:
      - "application/json"
      responses:
        401:
          description: "Unauthorized"
        200:
          description: ""
      security:
        - api_key: []  
        
  /components:
    get:
      tags:
      - "tickets"
      summary: "Finds available components that are susceptible for ticket association"
      description: ""
      operationId: "getComponents"
      produces:
      - "application/json"
      responses:
        401:
          description: "Unauthorized"
        200:
          description: ""
      security:
        - api_key: [] 
        
  /users:
    get:
      tags:
      - "tickets"
      summary: "Finds admin users to whom we can assign tickets"
      description: ""
      operationId: "getAdminUsers"
      produces:
      - "application/json"
      responses:
        401:
          description: "Unauthorized"
        200:
          description: ""
      security:
        - api_key: []  
        
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "Bearer"
    in: "header"
definitions:
  newTicket:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      productName:
        type: "string"
      componentName:
        type: string
      summary:
        type: string
      description:
        type: string
      assigned_to:
        type: string